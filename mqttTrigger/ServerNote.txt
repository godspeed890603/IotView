1.REQUEST_TOPIC = "request/+/service1"
request:send from client 
+:macaddress+UUID
service1:service name for example:temp,humi,verbration,PMS

REQUEST_TOPIC example:
"request/macaddress+UUID/service_temp"
"request/macaddress+UUID/service_humi"
"request/macaddress+UUID/service_verbration"
"request/macaddress+UUID/service_PMS"

2.on_message
-根據service name 產生sqlite queue_db
並將資料insert入queue
service1_queue_db.db
-trigger service 起來處理資料

3.trigger 順序
1.讀取broker yaml設定檔
2.讀取sqlite queue yaml設定檔
-create queue 的路徑

4.sqlite "queue" table schema
-create table
t_stamp|macaddress|act_crr_id|payload|action_flg|act_crr_id
       |17        |32        |3000   |1         |32
t_stamp:T_Stamp
macaddress:char(17)
act_crr_id:char(32)
payload:char(3000)
action_flg:char(1)
act_crr_id:char(32)
-*需要確認TABLE是否存在

5.paho-mqtt 2.1.0
https://pypi.org/project/paho-mqtt/#callbacks


因為MQTT無實體的Queue
因此將SQLITE的DB拿來當Queue
on_message時，先將資料參入sqlite 因此將SQLITE的DB拿來當Queue
在trigger service程式將資料依時間先後順序讀出進行處理
請給我範例程式